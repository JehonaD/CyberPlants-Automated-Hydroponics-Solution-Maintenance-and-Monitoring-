CyberPlants/
├── README.md
├── Section3_Calibration/
│   ├── Calibration_Instructions.md
│   ├── Initial_Sensor_Code.ino
│   ├── Calibrated_Sensor_Code.ino
├── Section4_SystemSetup/
│   ├── System_Setup_Instructions.md
│   ├── System_Setup_Code.ino
├── Section5_SoftwareSetup/
│   ├── Software_Setup_Instructions.md
│   ├── CoolTerm_Setup_Script.ino

# CyberPlants Automated Hydroponics Solution Maintenance and Monitoring

## Overview
This repository contains all the instructions and code required to set up, maintain, and monitor the automated hydroponics system.

### Sections
- [Section 1: Hardware Setup](#section-1-hardware-setup)
- [Section 2: Circuit Diagram](#section-2-circuit-diagram)
- [Section 3: Calibration of Ultrasonic Sensor](./Section3_Calibration/Calibration_Instructions.md)
- [Section 4: System Setup](./Section4_SystemSetup/System_Setup_Instructions.md)
- [Section 5: Software Setup](./Section5_SoftwareSetup/Software_Setup_Instructions.md)


> **Note:** Skip to Section 3 if the system is intact and no parts are missing.

---

## Section 1: Hardware Setup

Ensure you have the following hardware ready before proceeding:

| Quantity | Component                     |
|----------|-------------------------------|
| 1        | Arduino Uno R3               |
| 1        | Ultrasonic Depth Sensor      |
| 1        | LCD                           |
| 2        | Push Buttons                  |
| 1        | Immersible Water Pump         |
| 1        | 5V Relay                      |
| 1        | Power Source for Pump         |
| 2        | Float Switches                |
| 1        | Adaptor                       |
| 1        | 1A Fuse with Fuse Holder      |
| 1        | 10k Potentiometer             |
| 1        | 220 Ohm Resistor              |
| 2        | 10 kOhm Resistor              |


---

### Next Steps

If your hardware is ready, proceed to Section 2: Circuit Diagram.

---

## Section 2: Circuit Diagram

To set up the system, connect the components as shown in the diagrams below.

### Monitoring System Schematic
![Monitoring System Schematic](./images/monitoring_system_schematic.png)

### Maintaining + Failsafe System Schematic
![Maintaining + Failsafe System Schematic](./images/maintaining_failsafe_schematic.png)

### Complete System Schematic
![Complete System Schematic](./images/complete_schematic.png)

---

### Written Out Schematic

For a detailed wiring guide, refer to the table below:

| **Component**      | **Wiring**                                   |
|---------------------|----------------------------------------------|
| **Ultrasonic Sensor** | VCC - 5v, GND - GND, TRIG - D12, ECHO - D13 |
| **LCD**              | VSS - GND, VDD - 5v, V0 - 10K potentiometer (1st leg), RS - D2, RW - GND, E - D3, DB4 - D4, DB5 - D5, DB6 - D6, DB7 - D7, A (or LED+) - 220 Ohm resistor -> 5V, K (or LED-) - GND |
| **10K Potentiometer** | 1st leg - V0, 2nd leg - GND, 3rd leg - 5V  |
| **Button 1**         | 1st Leg - 10KOhm resistor -> GND, 2nd Leg - 5V, 3rd Leg - D8 |
| **Button 2**         | 1st Leg - 10KOhm resistor -> GND, 2nd Leg - 5V, 3rd Leg - D9 |
| **Float Switch 1**   | 1st wire - A0, 2nd wire (or black wire) - GND |
| **Float Switch 2**   | 1st wire - A1, 2nd wire (or black wire) - GND |
| **Pump**             | Red wire - COM terminal relay, Black wire - Negative terminal adapter |
| **Adapter**          | Positive Outlet - Fuse wire, Negative Outlet - Black pump wire |
| **Relay**            | COM terminal - Black pump wire, NC terminal - Fuse wire, DC+ - 5V, DC- - GND, IN - D11 |

---

### Notes
- Replace the image placeholders (`./images/...`) with the actual paths to your schematic images once uploaded to the repository.
- Ensure your images are stored in a folder named `images` for the paths to work correctly.

# Section 3: Calibration of Ultrasonic Sensor

## Requirements
- Arduino IDE installed and ready to run.
- For installation instructions, refer to [Arduino IDE Info](https://www.arduino.cc/en/software).

---
## Section 3: Calibration

## Steps for Calibration

### 1. Initial Code
Upload the following code to your Arduino to measure raw distances:

- Open the Arduino IDE.
- Connect the Arduino board to your computer.
- Paste the code from `Initial_Sensor_Code.ino`.
- Verify (click the checkmark) and upload (click the arrow) to run the system.

You can find the code here: [Initial_Sensor_Code.ino](./Initial_Sensor_Code.ino).

---

### 2. Calibration Process
1. Position the sensor at a fixed height above the plant bin.
2. Pour water into the bin in small increments, recording the actual distance and measured distance from the ultrasonic sensor.
3. Repeat this process 3-4 times.
4. Calculate individual correction factors for each measurement:

   \[
   \text{Individual Correction Factor} = \frac{\text{Actual Distance}}{\text{Measured Distance}}
   \]

5. Determine the average correction factor:

   \[
   \text{Correction Factor} = \text{AVERAGE}(\text{Individual Correction Factors})
   \]

---

### 3. Final Code
After calculating the correction factor, modify the code to include it. Use the file `Calibrated_Sensor_Code.ino` and update the `correctionFactor` variable.

You can find the calibrated code here: [Calibrated_Sensor_Code.ino](./Calibrated_Sensor_Code.ino).

---

### Notes
Ensure that the sensor is securely mounted during calibration for consistent results.

---

# Section 4: System Setup

## Requirements
- Arduino Uno R3
- AC source for the pump
- Water solution bin and plant bin
- Float Switch 1 (connected to A0 on Arduino)
- Float Switch 2 (connected to A0 on Arduino)
- Arduino IDE installed (instructions [here](https://www.arduino.cc/en/software))

---

## Steps for System Setup

### 1. Plugging in and Preparing Hardware
1. Plug the **Arduino Uno R3** into your laptop.
2. Plug the **AC source for the pump** into an outlet.
3. Insert water into your **solution bin** and **plant bin** as needed.

---

### 2. Float Switch Setup
1. **Float Switch 1**: Place this float switch into the **plant bin** to stop overfill and prevent flooding.
    - Half of the float should be placed at a height where you want the water to stop in case the ultrasonic sensor fails (as a last resort).
    - The float should be above the water.

2. **Float Switch 2**: Place this float switch into the **solution bin** to stop the pump when the solution level gets too low.
    - The float should be immersed in the water.

---

### 3. Upload the Code
1. **Code Setup**: The code is already embedded, just update the `correctionFactor` in the code.
2. Open the **Arduino IDE**.
3. **Verify & Upload**: Connect the Arduino, click the checkmark to verify the code, and then click the arrow to upload it.

---

### 4. LCD and Button Configuration
- After uploading, the **LCD** should light up displaying **"Water Level - Set Min"**.
- **Set MIN and MAX Thresholds**:
    1. Click on the first button (**green button**) to set the **MIN threshold**.
        - MIN is the minimum distance between the ultrasonic sensor and the top of the solution level, which turns off the pump when reached.
        - For example, setting the MIN to **2cm** means the pump will turn off when the solution level is 2cm from the ultrasonic sensor.
        
    2. Click on the second button (**blue button**) to set the **MAX threshold**.
        - MAX is the maximum distance between the ultrasonic sensor and the top of the solution level, which turns on the pump when reached.
        - For example, setting the MAX to **5cm** means the pump will turn on when the solution level reaches 5cm from the ultrasonic sensor.

- **Mode Switch**:
    - Click the second button (**blue button**) to switch the mode.
    - The mode cycles between: **"Setting Min" -> "Setting Max" -> "Monitoring"**.

---

### 5. System Monitoring
Your system is now set up! The pump will trigger based on the thresholds you set to maintain the solution level, and the ultrasonic sensor will monitor the solution continuously.




